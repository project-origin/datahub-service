apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-deployment
  template:
    metadata:
      labels:
        app: datahub-deployment
    spec:
      containers:
        - name: datahub-container
          image: projectorigin/datahub-service:{{ .Values.tag }}
          ports:
            - containerPort: 8089
          envFrom:
            - configMapRef:
                name: namespace-config
            - configMapRef:
                name: datahub-config
            - secretRef:
                name: eloverblik-secret
            - secretRef:
                name: datahub-system-secret
            - secretRef:
                name: datahub-db-secret
          env:
            - name: SERVICE_NAME
              value: DataHubService
            - name: WORKERS
              value: "{{ .Values.workers }}"
            - name: WORKER_CONNECTIONS
              value: "{{ .Values.workerconnections }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-beat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-beat-deployment
  template:
    metadata:
      labels:
        app: datahub-beat-deployment
    spec:
      containers:
        - name: datahub-beat-container
          image: projectorigin/datahub-service:{{ .Values.tag }}
          args: ["./entrypoint.beat.sh"]
          envFrom:
            - configMapRef:
                name: namespace-config
            - configMapRef:
                name: datahub-config
            - secretRef:
                name: eloverblik-secret
            - secretRef:
                name: datahub-system-secret
            - secretRef:
                name: datahub-db-secret
          env:
            - name: SERVICE_NAME
              value: DataHubServiceBeat
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-worker-deployment
spec:
  replicas: {{ .Values.workerreplicas }}
  selector:
    matchLabels:
      app: datahub-worker-deployment
  template:
    metadata:
      labels:
        app: datahub-worker-deployment
    spec:
      containers:
        - name: datahub-worker-container
          image: projectorigin/datahub-service:{{ .Values.tag }}
          args: ["./entrypoint.worker.sh"]
          envFrom:
            - configMapRef:
                name: namespace-config
            - configMapRef:
                name: datahub-config
            - secretRef:
                name: eloverblik-secret
            - secretRef:
                name: datahub-system-secret
            - secretRef:
                name: datahub-db-secret
          env:
            - name: SERVICE_NAME
              value: DataHubServiceWorker
            - name: CONCURRENCY
              value: "{{ .Values.concurrency }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-disclosure-worker-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-disclosure-worker-deployment
  template:
    metadata:
      labels:
        app: datahub-disclosure-worker-deployment
    spec:
      containers:
        - name: datahub-disclosure-worker-container
          image: projectorigin/datahub-service:{{ .Values.tag }}
          args: ["./entrypoint.disclosure-worker.sh"]
          envFrom:
            - configMapRef:
                name: namespace-config
            - configMapRef:
                name: datahub-config
            - secretRef:
                name: eloverblik-secret
            - secretRef:
                name: datahub-system-secret
            - secretRef:
                name: datahub-db-secret
          env:
            - name: SERVICE_NAME
              value: DataHubServiceDisclosure
            - name: CONCURRENCY
              value: "{{ .Values.concurrency }}"
